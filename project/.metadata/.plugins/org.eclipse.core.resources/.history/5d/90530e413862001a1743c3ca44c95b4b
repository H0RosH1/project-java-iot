


import java.awt.BorderLayout;
import java.awt.Label;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.Scanner;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JPanel;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

import com.fazecast.jSerialComm.SerialPort;
import javax.swing.JLabel;
import javax.swing.SwingConstants;
import java.awt.Font;
public class projects {
	
	static SerialPort chosenPort;
	
	float h ;
	private static int gui;
	private static int num;
	private static int T=1;
	private static String n;
	public static void main(String[] args) {
		
		// create and configure the window
		JFrame window = new JFrame();
		window.setTitle("Sensor Graph GUI");
		window.setSize(600, 400);
		
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.getContentPane().setLayout(null);
		
		// create a drop-down box and connect button, then place them at the top of the window
		JComboBox<String> portList = new JComboBox<String>();
		JButton connectButton = new JButton("Connect");
		JPanel topPanel = new JPanel();
		topPanel.setBounds(0, 0, 584, 33);
		topPanel.add(portList);
		topPanel.add(connectButton);
		window.getContentPane().add(topPanel);
		
		JLabel lblNewLabel = new JLabel("loading...");
		lblNewLabel.setFont(new Font("Tahoma", Font.PLAIN, 17));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(37, 256, 153, 33);
		window.getContentPane().add(lblNewLabel);
		
		JLabel lblNewLabel_1 = new JLabel("Humidity(%)");
		lblNewLabel_1.setFont(new Font("Tahoma", Font.PLAIN, 16));
		lblNewLabel_1.setBounds(76, 214, 98, 42);
		window.getContentPane().add(lblNewLabel_1);
		
		JLabel TextC = new JLabel("loading...");
		TextC.setHorizontalAlignment(SwingConstants.CENTER);
		TextC.setFont(new Font("Tahoma", Font.PLAIN, 17));
		TextC.setBounds(200, 256, 153, 33);
		window.getContentPane().add(TextC);
		
		JLabel TextF = new JLabel("loading...");
		TextF.setHorizontalAlignment(SwingConstants.CENTER);
		TextF.setFont(new Font("Tahoma", Font.PLAIN, 17));
		TextF.setBounds(363, 256, 153, 33);
		window.getContentPane().add(TextF);
		
		JLabel lblNewLabel_1_1 = new JLabel("Celsius( ํC)");
		lblNewLabel_1_1.setFont(new Font("Tahoma", Font.PLAIN, 16));
		lblNewLabel_1_1.setBounds(238, 214, 98, 42);
		window.getContentPane().add(lblNewLabel_1_1);
		
		JLabel lblNewLabel_1_2 = new JLabel("Fahrenheit( ํF)");
		lblNewLabel_1_2.setFont(new Font("Tahoma", Font.PLAIN, 16));
		lblNewLabel_1_2.setBounds(386, 214, 98, 42);
		window.getContentPane().add(lblNewLabel_1_2);
		
		// populate the drop-down box
		
		SerialPort[] portNames = SerialPort.getCommPorts();
		for(int i = 0; i < portNames.length; i++) {
			 n =portNames[i].getSystemPortName();
			 portList.addItem(portNames[i].getSystemPortName());
		}
		
		// create the line graph
		
		
		
		// configure the connect button and use another thread to listen for data
		connectButton.addActionListener(new ActionListener(){
			@Override public void actionPerformed(ActionEvent arg0) {
				if(connectButton.getText().equals("Connect")) {
					// attempt to connect to the serial port
					chosenPort = SerialPort.getCommPort( portList.getSelectedItem().toString());
					chosenPort.setComPortTimeouts(SerialPort.TIMEOUT_SCANNER, 0, 0);
					chosenPort.setComPortParameters(9600,8,1,0);
					if(chosenPort.openPort()) {
						connectButton.setText("Disconnect");
						portList.setEnabled(false);
					}
					
					// เรียกค่าจากarduinoเข้าและแทนค่าใส่labal
					Thread thread = new Thread(){
						@Override public void run() {
							while(true) {
							Scanner in = new Scanner(chosenPort.getInputStream());
							Scanner scanner = new Scanner(chosenPort.getInputStream());
							while(scanner.hasNextLine()) {
								try {
									Thread.sleep(100);
								} catch (InterruptedException e1) {
									// TODO Auto-generated catch block
									e1.printStackTrace();
								}
								try {
									Thread.sleep(1000);
									readSerial gett = new readSerial();
									String line = scanner.nextLine();
									String number = String.valueOf(in.next());
									
									if(T==1) {
									lblNewLabel.setText(number);
									T=2;
									}
									else if (T==2) {
										TextC.setText(number);
									T=3;
									}
									else if(T==3) {
										TextF.setText(number);
										T=1;
									}
									window.repaint();
								} catch(Exception e) {
									
								}
							}
							scanner.close();
						}
						}
					};
					thread.start();
				} else {
					// disconnect from the serial port
					chosenPort.closePort();
					portList.setEnabled(true);
					connectButton.setText("Connect");
					
				
				}
			}
		});
		
		// show the window
		window.setVisible(true);
	}
	public String portNAME() {
		 
		return n;
	}
}